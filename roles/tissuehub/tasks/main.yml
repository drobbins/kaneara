---
- set_fact:
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

- name: ensure forever is installed
  sudo: true
  npm: name=forever global=yes state=present

- name: ensure the MongoDB configuration is in place
  sudo: true
  template: src=mongod.conf.j2 dest=/etc/mongod.conf

- name: ensure MongoDB is running
  sudo: true
  service: name=mongod state=restarted

- name: create replica set initialization file
  template: src=replset_init.j2 dest=/tmp/replset_init.js

- name: initialize the replication set
  shell: /usr/bin/mongo /tmp/replset_init.js

- name: make directory for release
  remote_user: "{{tissuehub_user}}"
  file: dest="{{app_dir}}/tissuehub-{{tissuehub_version}}" state=directory

- name: download release
  remote_user: "{{tissuehub_user}}"
  get_url: url="https://github.com/TissueHub/TissueHub/releases/download/v{{tissuehub_version}}/tissuehub-{{tissuehub_version}}-os.linux.x86_64.tar.gz" dest={{app_dir}}/tissuehub-{{tissuehub_version}}-os.linux.x86_64.tar.gz validate_certs=no

- name: make directory for release
  remote_user: "{{tissuehub_user}}"
  file: dest="{{app_dir}}/tissuehub-{{tissuehub_version}}" state=directory

- name: extract release
  remote_user: "{{tissuehub_user}}"
  unarchive: copy=no src="{{app_dir}}/tissuehub-{{tissuehub_version}}-os.linux.x86_64.tar.gz" dest="{{app_dir}}/tissuehub-{{tissuehub_version}}"

- name: install npm dependencies
  remote_user: "{{tissuehub_user}}"
  shell: chdir={{app_dir}}/tissuehub-{{tissuehub_version}}/bundle/programs/server npm install

- name: stop current running app
  remote_user: "{{tissuehub_user}}"
  shell: forever stopall
  ignore_errors: yes

- name: start tissuehub
  remote_user: "{{tissuehub_user}}"
  shell:  >
    PORT={{ port }}
    MONGO_URL={{ mongo_url }}
    MONGO_OPLOG_URL={{ "mongodb://localhost/local" }}
    ROOT_URL={{ "https://tissuehub.org/" }}
    forever start {{app_dir}}/tissuehub-{{tissuehub_version}}/bundle/main.js
  async: 10
  poll: 1
